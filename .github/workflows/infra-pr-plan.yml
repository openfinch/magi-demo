name: Infra (PR Plan)

on:
  pull_request:
    paths:
      - "stacks/**"
      - "images/**"
      - "magi.config.ts"
      - "package*.json"
      - ".github/workflows/infra-pr-plan.yml"

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  NODE_VERSION: "20"
  MAGI_ENV: "dev"   # PRs plan against dev

jobs:
  plan:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        cloud: [ aws, gcp ]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with: { node-version: ${{ env.NODE_VERSION }} }

      - uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - run: npm ci

      - name: Configure AWS (OIDC)
        if: matrix.cloud == 'aws'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::<ACCOUNT_ID>:role/<GHA_OIDC_ROLE>
          aws-region: eu-west-1

      - name: Configure GCP (OIDC)
        if: matrix.cloud == 'gcp'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/<PROJECT_NUMBER>/locations/global/workloadIdentityPools/<POOL>/providers/<PROVIDER>
          service_account: gha-magi@<GCP_PROJECT_ID>.iam.gserviceaccount.com

      - name: Format & validate
        run: |
          npx magi fmt --check
          npx magi validate --env ${{ env.MAGI_ENV }} --cloud ${{ matrix.cloud }}

      - name: Policy check
        run: npx magi policy --env ${{ env.MAGI_ENV }} --cloud ${{ matrix.cloud }}

      - name: Plan
        run: |
          mkdir -p plans
          npx magi plan --env ${{ env.MAGI_ENV }} --cloud ${{ matrix.cloud }} --out plans/${{ matrix.cloud }}.plan.txt

      - uses: actions/upload-artifact@v4
        with:
          name: plan-${{ matrix.cloud }}
          path: plans/${{ matrix.cloud }}.plan.txt
          retention-days: 7

  comment:
    runs-on: ubuntu-latest
    needs: [plan]
    steps:
      - uses: actions/download-artifact@v4
        with: { name: plan-aws, path: ./plans }
      - uses: actions/download-artifact@v4
        with: { name: plan-gcp, path: ./plans }
      - name: Summarise & comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            function clip(p){ return '```\n' + fs.readFileSync(p,'utf8').slice(0,4000) + '\n```'; }
            const body = [
              '### Magi PR Plan Summary',
              '**AWS (dev):**',
              clip('plans/aws.plan.txt'),
              '**GCP (dev):**',
              clip('plans/gcp.plan.txt'),
              '_Full plans are attached as artifacts._'
            ].join('\n\n');
            github.rest.issues.createComment({
              owner: context.repo.owner, repo: context.repo.repo,
              issue_number: context.issue.number, body
            });
